# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    make.txt                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: unovo-ru <unovo-ru@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/10/04 07:14:12 by unovo-ru          #+#    #+#              #
#    Updated: 2025/10/04 07:31:49 by unovo-ru         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME = fractol

INCLUDE = fractol.h

AR = ar rcs

CC = cc

CFLAGS = -Wall -Wextra -Werror -I. -Ilibft

RM = rm -rf

#librarys
LIBFT_DIR = libft

LIBFT = $(LIBFT_DIR)/libft.a

# MLX42 library
MLX42_DIR = MLX42

MLX42 = $(MLX42_DIR)/build/libmlx42.a

MLX42_FLAGS = -I$(MLX42_DIR)/include

MLX42_LDFLAGS = -ldl -lglfw -pthread -lm

# Update CFLAGS to include MLX42 headers
CFLAGS += $(MLX42_FLAGS)

# Using shell command instead of addprefix
SRCS = 	src/fractol.c \
		src/render.c \
		src/mandelbrot.c \
		
OBJS = $(SRCS:%.c=%.o)

all: $(NAME)

%.o: %.c $(INCLUDE)
	@echo ":hammer_and_wrench: Compiling $<..."
	@$(CC) $(CFLAGS) -c $< -o $@
	
$(NAME): $(OBJS) $(LIBFT) $(MLX42)
	@echo ":link: Linking $(NAME)..."
	@$(CC) $(CFLAGS) $(OBJS) $(LIBFT) $(MLX42) $(MLX42_LDFLAGS) -o $(NAME)
	@echo ":white_check_mark: Compilation finished successfully."
#build libft only if libft.a is outdated

$(LIBFT):
	@echo ":package: Building libft..."
	@$(MAKE) -s -C $(LIBFT_DIR)
	
#build MLX42 only if libmlx42.a is outdated

$(MLX42):
	@echo ":package: Building MLX42..."
	@cmake -S $(MLX42_DIR) -B $(MLX42_DIR)/build >/dev/null 2>&1
	@cmake --build $(MLX42_DIR)/build -j >/dev/null 2>&1
	
clean:
	@echo ":broom: Cleaning objects..."
	@$(RM) $(OBJS)
	@$(MAKE) -s -C $(LIBFT_DIR) clean

fclean: clean
	@echo ":wastebasket: removing executables y libreries..."
	@$(RM) $(NAME)
	@$(MAKE) -s -C $(LIBFT_DIR) fclean
	@echo ":white_check_mark: Cleanup completed successfully."# Clean MLX42 build directory

mclean:
	@echo ":broom: Cleaning MLX42..."
	@$(RM) $(MLX42_DIR)/build

re: fclean all

.PHONY: all clean fclean re mclean